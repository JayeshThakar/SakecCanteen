// Generated by view binder compiler. Do not edit!
package com.example.sakeccanteen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sakeccanteen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerificationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button Login;

  @NonNull
  public final ProgressBar Progress;

  @NonNull
  public final Button resend;

  private ActivityVerificationBinding(@NonNull RelativeLayout rootView, @NonNull Button Login,
      @NonNull ProgressBar Progress, @NonNull Button resend) {
    this.rootView = rootView;
    this.Login = Login;
    this.Progress = Progress;
    this.resend = resend;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Login;
      Button Login = ViewBindings.findChildViewById(rootView, id);
      if (Login == null) {
        break missingId;
      }

      id = R.id.Progress;
      ProgressBar Progress = ViewBindings.findChildViewById(rootView, id);
      if (Progress == null) {
        break missingId;
      }

      id = R.id.resend;
      Button resend = ViewBindings.findChildViewById(rootView, id);
      if (resend == null) {
        break missingId;
      }

      return new ActivityVerificationBinding((RelativeLayout) rootView, Login, Progress, resend);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
